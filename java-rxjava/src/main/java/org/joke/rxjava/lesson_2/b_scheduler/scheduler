如果你想给Observable操作符链添加多线程功能，你可以指定操作符（或者特定的
Observable）在特定的调度器(Scheduler)上执行。
某些ReactiveX的Observable操作符有一些变体，它们可以接受一个Scheduler参数。这个参
数指定操作符将它们的部分或全部任务放在一个特定的调度器上执行。
使用ObserveOn和SubscribeOn操作符，你可以让Observable在一个特定的调度器上执行，
ObserveOn指示一个Observable在一个特定的调度器上调用观察者的onNext, onError和
onCompleted方法，
SubscribeOn更进一步，它指示Observable将全部的处理过程（包括发射
数据和通知）放在特定的调度器上执行。

调度器类型效果
Schedulers.computation( )
用于计算任务，如事件循环或和回调处理，不要用于IO操作(IO操作请使用Schedulers.io())；
默认线程数等于处理器的数量

Schedulers.from(executor)
使用指定的Executor作为调度器

Schedulers.immediate( )
在当前线程立即开始执行任务

Schedulers.io( )
用于IO密集型任务，如异步阻塞IO操作，这个调度器的线程池会根据需要增长；
对于普通的计算任务，请使用Schedulers.computation()；
Schedulers.io( )默认是一个CachedThreadScheduler，很像一个有线程缓存的新线程调度器

Schedulers.newThread( )
为每个任务创建一个新线程

Schedulers.trampoline( )
当其它排队的任务完成后，在当前线程排队开始执行

