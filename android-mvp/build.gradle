apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.joke.mvpdemo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
//        flavorDimensions "versionCode"


        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug {
            minifyEnabled false
            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    // If you need to add more flavors, consider using flavor dimensions.
//    productFlavors {
//        mock {
//            applicationIdSuffix = ".mock"
//        }
//        prod {
//
//        }
//    }

    // Remove mockRelease as it's not needed.
//    android.variantFilter { variant ->
//        if (variant.buildType.name.equals('release')
//                && variant.getFlavors().get(0).name.equals('mock')) {
//            variant.setIgnore(true);
//        }
//    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "io.reactivex:rxjava:${rootProject.ext.rxjava}"
    compile "io.reactivex:rxandroid:${rootProject.ext.rxandroid}"

    //官方兼容库
    compile "com.android.support:appcompat-v7:${rootProject.ext.supportVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.ext.supportVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.ext.supportVersion}"
    compile "com.android.support:design:${rootProject.ext.supportVersion}"

    compile "com.google.guava:guava:${rootProject.ext.guava}"
    //butter knife
    compile "com.jakewharton:butterknife:$rootProject.ext.butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterknife"
//
//    androidTestCompile("com.android.support.test.espresso:espresso-idling-resource:${rootProject.ext.espresso}"
//            , { exclude group: 'com.android.support', module: 'support-annotations' })
//    androidTestCompile("com.android.support.test.espresso:espresso-core:${rootProject.ext.espresso}"
//            , { exclude group: "com.android.support", module: "support-annotations" })
//    androidTestCompile ("com.android.support.test.espresso:espresso-contrib:${rootProject.ext.espresso}"
//            , {exclude group: "com.android.support', module: 'support-annotations" })
//    androidTestCompile("com.android.support.test.espresso:espresso-intents:${rootProject.ext.espresso}"
//            , { exclude group: "com.android.support', module: 'support-annotations" })
//
//
//    testCompile ("junit:junit:${rootProject.ext.junit}", { exclude group: "com.android.support", module: "support-annotations" })
//    testCompile ("org.mockito:mockito-all:2.0.2-beta" , { exclude group: "com.android.support", module: "support-annotations" })
}
